diff --git a/pandas/core/indexes/base.py b/pandas/core/indexes/base.py
index b1ac17361b..c896e68f7a 100644
--- a/pandas/core/indexes/base.py
+++ b/pandas/core/indexes/base.py
@@ -3111,7 +3111,7 @@ class Index(IndexOpsMixin, PandasObject):
                     self._invalid_indexer("label", key)
 
             elif kind == "loc" and is_integer(key):
-                if not self.holds_integer():
+                if not (is_integer_dtype(self.dtype) or is_object_dtype(self.dtype)):
                     self._invalid_indexer("label", key)
 
         return key
diff --git a/pandas/core/series.py b/pandas/core/series.py
index 2182374337..77f9df0f4e 100644
--- a/pandas/core/series.py
+++ b/pandas/core/series.py
@@ -969,9 +969,11 @@ class Series(base.IndexOpsMixin, generic.NDFrame):
         if takeable:
             return self._values[label]
 
+        # Similar to Index.get_value, but we do not fall back to positional
+        loc = self.index.get_loc(label)
         # We assume that _convert_scalar_indexer has already been called,
         #  with kind="loc", if necessary, by the time we get here
-        return self.index.get_value(self, label)
+        return self.index._get_values_for_loc(self, loc, label)
 
     def __setitem__(self, key, value):
         key = com.apply_if_callable(key, self)
